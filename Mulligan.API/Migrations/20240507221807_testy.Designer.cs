// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mulligan.API.Data;

#nullable disable

namespace Mulligan.API.Migrations
{
    [DbContext(typeof(MulliganDbContext))]
    [Migration("20240507221807_testy")]
    partial class testy
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mulligan.API.Models.Domain.GolfCourseDomain", b =>
                {
                    b.Property<Guid>("GOLF_COURSE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CITY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COUNTRY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("COURSE_RATING")
                        .HasColumnType("real");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PAR")
                        .HasColumnType("int");

                    b.Property<int>("SLOPE_RATING")
                        .HasColumnType("int");

                    b.Property<string>("SUBDIVISION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YARDAGE")
                        .HasColumnType("int");

                    b.HasKey("GOLF_COURSE_ID");

                    b.ToTable("GOLF_COURSE");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.PostDomain", b =>
                {
                    b.Property<Guid>("POST_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CONTENT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("USER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserDomainUSER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("POST_ID");

                    b.HasIndex("UserDomainUSER_ID");

                    b.ToTable("POST");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.ScoreDomain", b =>
                {
                    b.Property<Guid>("SCORE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<float>("DIFFERENTIAL")
                        .HasColumnType("real");

                    b.Property<Guid?>("GOLF_COURSE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GolfCourseDomainGOLF_COURSE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TOTAL")
                        .HasColumnType("int");

                    b.Property<Guid>("USER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserDomainUSER_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SCORE_ID");

                    b.HasIndex("GolfCourseDomainGOLF_COURSE_ID");

                    b.HasIndex("UserDomainUSER_ID");

                    b.ToTable("SCORE");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.UserDomain", b =>
                {
                    b.Property<Guid>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EMAIL_ADDRESS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FULL_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GOLF_COURSE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GolfCourseDomainGOLF_COURSE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("HANDICAP_INDEX")
                        .HasColumnType("real");

                    b.Property<string>("HOME_COURSE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USERNAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("USER_ID");

                    b.HasIndex("GolfCourseDomainGOLF_COURSE_ID");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.PostDomain", b =>
                {
                    b.HasOne("Mulligan.API.Models.Domain.UserDomain", null)
                        .WithMany("POSTS")
                        .HasForeignKey("UserDomainUSER_ID");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.ScoreDomain", b =>
                {
                    b.HasOne("Mulligan.API.Models.Domain.GolfCourseDomain", null)
                        .WithMany("SCORES")
                        .HasForeignKey("GolfCourseDomainGOLF_COURSE_ID");

                    b.HasOne("Mulligan.API.Models.Domain.UserDomain", null)
                        .WithMany("SCORES")
                        .HasForeignKey("UserDomainUSER_ID");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.UserDomain", b =>
                {
                    b.HasOne("Mulligan.API.Models.Domain.GolfCourseDomain", null)
                        .WithMany("USERS")
                        .HasForeignKey("GolfCourseDomainGOLF_COURSE_ID");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.GolfCourseDomain", b =>
                {
                    b.Navigation("SCORES");

                    b.Navigation("USERS");
                });

            modelBuilder.Entity("Mulligan.API.Models.Domain.UserDomain", b =>
                {
                    b.Navigation("POSTS");

                    b.Navigation("SCORES");
                });
#pragma warning restore 612, 618
        }
    }
}
